[{'batch': 1,
  'results': {'0i2q6s8lf6i42pqr': ['Inter Milan',
    'Simone Inzaghi',
    'Alexis Sanchez',
    'Champions League',
    'Benfica',
    'Serie A',
    'Juventus',
    'Manchester United'],
   'v9185o72rgaa6kky': ['Singapore',
    'Bus fares',
    'Card reader errors',
    'Land Transport Authority',
    'Commuters',
    'SimplyGo app',
    'TransitLink',
    'Refunds'],
   'tm4bmh6ok01wtnrc': ['United States',
    'Navy',
    'Fat Leonard scandal',
    'Corruption',
    'Misconduct',
    'Prosecutions',
    'Fraud',
    'Extortion'],
   'tk1rinc115fwhj40': ['United Nations',
    'Canada',
    'India',
    'Sikh',
    'Murder',
    'Allegations',
    'Diplomacy',
    'Trade'],
   'kaaaszruh1y9pibt': ['Italy',
    'Low birth rates',
    'Demographic crisis',
    'Giorgia Meloni',
    'Family policies',
    'Shrinking population',
    'Ageing population',
    'Immigration']}}]




Date: 2023-08-01
Event: Major flood hits the southern region of Country X, causing significant damage and displacing thousands of residents. Article: 2
Date: 2023-08-05 
Event: The government of Country X declares a state of emergency in response to the flooding, mobilizing national resources for disaster relief. Article: 2
Date: 2023-08-10
Event: International aid begins to arrive in Country X, with several countries sending supplies and personnel to assist in the relief efforts. Article: 3



response_schemas = [
    ResponseSchema(name="Date", description="The date of the event in YYYY-MM-DD format"),
    ResponseSchema(name="Event", description="A detailed description of the event"),
    ResponseSchema(name="Article", description="The article number from which the event was extracted"),
]

output_parser = StructuredOutputParser.from_response_schemas(response_schemas)

# See the prompt template you created for formatting
format_instructions = output_parser.get_format_instructions()
